name: CI
on:
  push: { branches: [ main, master ] }
  pull_request: {}
jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Configure
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=ON
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: ctest --test-dir build --output-on-failure

  conan:
    name: Conan Support (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Install Conan
        run: |
          echo "/opt/pipx_bin" >> "$GITHUB_PATH"
          pipx --version
          pipx install "conan>=2.0,<3.0"
          conan --version

      - name: Cache Conan
        uses: actions/cache@v4
        with:
          path: ~/.conan2
          key: ${{ runner.os }}-conan2-${{ hashFiles('conanfile.py', 'CMakeLists.txt', 'include/**', 'tests/**', 'examples/**') }}

      - name: Detect Conan profile
        run: conan profile detect || true

      - name: conan create (Release)
        run: conan create . --version=0.2 -s build_type=Release
